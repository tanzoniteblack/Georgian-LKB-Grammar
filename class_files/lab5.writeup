Ryan Smith
Lab 5 - L567
2/1/2012

Head-modifier rules:
    In Georgian, all adjectives MUST precede (i.e. appear to the left) of the noun that they modify.  Therefore, I only require a adj-head-int-phrase, and not a head-adj-int-phrase.
	
	However, since I already had the rule:
	adj-head-int := adj-head-scop-phrase.
	in my grammar's rule.tdl, I had to modify it to :
	adj-head-scop := adj-head-scop-phrase
	so that I could add the rule:
	adj-head-int := adj-head-int-phrase.

	and then add to my lexicon.tdl:

	;; Adjectives
	ქართულ := adjective-lex &
	  [ STEM < "ქართულ" >,
	      SYNSEM.LKEYS.KEYREL.PRED "_georgian_a_rel" ].

	At this point, if I enter in a sentence like 
	`ქართულ მასწავლებელ-ი წერილ-ს 0-0-წერ-PSF-ს'
	`georgian teacher-NOM letter-DAT NOPRE-3.OBJ-write-PSF-3.SG.SUBJ.PRES/FUT'
	which is grammatically incorrect, because the adjective hasn't had a case marker put on, I get a parse that puts the adjective modifying the correct noun.
	
	I will comment at this point, that using emacs to enter in sentences manually (with C-p), it will not parse.  But if I enter it in through the 'enter parse' dialogue in the LKB, it works fine.

Adverbs:
	When working with adverbs, I realized that I do need the head-adj-int rule as well, because adverbs can go more or less anywhere in the sentence.

	Therefore I have changed:
	head-adj-int := head-adj-scop-phrase.
	to:
	head-adj-scop := head-adj-scop-phrase.

	and added:
	head-adj-int := head-adj-int-phrase.

	My adverb-lex rule:
	
adverb-lex := basic-adverb-lex & intersective-mod-lex &
  [ SYNSEM [ LOCAL [ CAT [ HEAD.MOD < [ LOCAL.CAT.HEAD verb ] >,
						   VAL [ SPR < >,
								 SUBJ < >,
								 COMPS < >,
								 SPEC < > ]]]]].

    Because my adjective rule above limits to POSTHEAD, and my adverb-lex doesn't, it allows for types of parses I had hoped for.

Adjective Agreement:
    Because adjectives agree for case in Georgian, it was necessary to add rules to add the case marking onto adjectives.

	To get the nominative case working, I added to georgian.tdl:
nominative-adj-lex-rule :=  adj-case-suffix-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD.FIRST.LOCAL.CAT.HEAD.CASE abs+nom ].

    and in irule.tdl:
nominative-adj-suffix :=
%suffix (* -ი)
nominative-adj-lex-rule.

    And similarly for dative and ergative:

dative-adj-lex-rule :=  adj-case-suffix-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD.FIRST.LOCAL.CAT.HEAD.CASE dat ].

ergative-adj-lex-rule :=  adj-case-suffix-lex-rule-super &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD.FIRST.LOCAL.CAT.HEAD.CASE erg ].


dative-adj-suffix :=
%suffix (* -0)
dative-adj-lex-rule.

ergative-adj-suffix :=
%suffix (* -მა)
ergative-adj-lex-rule.

This adj-case-suffix-lex-rule-super type that I'm referencing here was a type I modified from noun-case-suffix-lex-rule-super:

adj-case-suffix-lex-rule-super := add-only-no-ccont-rule & infl-lex-rule &
  [ INFLECTED [ ADJ-CASE-SUFFIX-FLAG +,
                PREVERB_OTHER-FLAG #preverb_other,
                NOUN-PLURALITY-FLAG #noun-plurality,
                1ST_2ND_PERSON_SUBJ_PREFIXES-OR-3_PL_SUBJ_AOR_TRANS-OR-3_PL_SUBJ_PAST_IMPERF_TRANS-OR-3_PL_SUBJ_PRES_TRANS-OR-3_SG_SUBJ_AOR_TRANS-OR-3_SG_SUBJ_PAST_IMPERF_TRANS-OR-3_SG_SUBJ_PRES_TRANS-OR-3RD_PERSON_ERG_NOM-OR-3RD_PERSON_NOM_DAT-FLAG #1st_2nd_person_subj_prefixes-or-3_pl_subj_aor_trans-or-3_pl_subj_past_imperf_trans-or-3_pl_subj_pres_trans-or-3_sg_subj_aor_trans-or-3_sg_subj_past_imperf_trans-or-3_sg_subj_pres_trans-or-3rd_person_erg_nom-or-3rd_person_nom_dat,
                TRANS-VERB-FLAG #trans-verb,
                PREVERB-FLAG #preverb,
                GENERAL_ENDING_VOWEL-NOUN-FLAG #general_ending_vowel-noun,
                2ND_OBJ_PREFIX-FLAG #2nd_obj_prefix,
                3_PL_SUBJ_AOR_INTRANS-OR-3_PL_SUBJ_AOR_TRANS-OR-3_PL_SUBJ_PRES_INTRANS-OR-3_PL_SUBJ_PRES_TRANS-OR-3_SG_SUBJ_PRES_INTRANS-OR-3_SG_SUBJ_PRES_TRANS-FLAG #3_pl_subj_aor_intrans-or-3_pl_subj_aor_trans-or-3_pl_subj_pres_intrans-or-3_pl_subj_pres_trans-or-3_sg_subj_pres_intrans-or-3_sg_subj_pres_trans,
                3_PL_SUBJ_AOR_INTRANS-OR-3_PL_SUBJ_PAST_IMPERF_INTRANS-OR-3_PL_SUBJ_PRES_INTRANS-OR-3_SG_SUBJ_AOR_INTRANS-OR-3_SG_SUBJ_PAST_IMPERF_INTRANS-OR-3_SG_SUBJ_PRES_INTRANS-OR-TENSE_AND_3RD_SUBJ-FLAG #3_pl_subj_aor_intrans-or-3_pl_subj_past_imperf_intrans-or-3_pl_subj_pres_intrans-or-3_sg_subj_aor_intrans-or-3_sg_subj_past_imperf_intrans-or-3_sg_subj_pres_intrans-or-tense_and_3rd_subj,
                OBJ_PREFIX-FLAG #obj_prefix,
                PSF-FLAG #psf,
                NOUN-CASE-SUFFIX-FLAG #noun-case-suffix,
                INTRANS-VERB-FLAG #intrans-verb,
                TENSE_AND_3RD_SUBJ-FLAG #tense_and_3rd_subj,
                1ST_2ND_PERSON_SUBJ_PREFIXES-OR-3_PL_SUBJ_AOR_INTRANS-OR-3_PL_SUBJ_PAST_IMPERF_INTRANS-OR-3_PL_SUBJ_PRES_INTRANS-OR-3_SG_SUBJ_AOR_INTRANS-OR-3_SG_SUBJ_PAST_IMPERF_INTRANS-OR-3_SG_SUBJ_PRES_INTRANS-FLAG #1st_2nd_person_subj_prefixes-or-3_pl_subj_aor_intrans-or-3_pl_subj_past_imperf_intrans-or-3_pl_subj_pres_intrans-or-3_sg_subj_aor_intrans-or-3_sg_subj_past_imperf_intrans-or-3_sg_subj_pres_intrans ],
    DTR adjective-lex &
        [ INFLECTED [ PREVERB_OTHER-FLAG #preverb_other,
                      NOUN-PLURALITY-FLAG #noun-plurality,
                      1ST_2ND_PERSON_SUBJ_PREFIXES-OR-3_PL_SUBJ_AOR_TRANS-OR-3_PL_SUBJ_PAST_IMPERF_TRANS-OR-3_PL_SUBJ_PRES_TRANS-OR-3_SG_SUBJ_AOR_TRANS-OR-3_SG_SUBJ_PAST_IMPERF_TRANS-OR-3_SG_SUBJ_PRES_TRANS-OR-3RD_PERSON_ERG_NOM-OR-3RD_PERSON_NOM_DAT-FLAG #1st_2nd_person_subj_prefixes-or-3_pl_subj_aor_trans-or-3_pl_subj_past_imperf_trans-or-3_pl_subj_pres_trans-or-3_sg_subj_aor_trans-or-3_sg_subj_past_imperf_trans-or-3_sg_subj_pres_trans-or-3rd_person_erg_nom-or-3rd_person_nom_dat,
                      TRANS-VERB-FLAG #trans-verb,
                      PREVERB-FLAG #preverb,
                      GENERAL_ENDING_VOWEL-NOUN-FLAG #general_ending_vowel-noun,
                      2ND_OBJ_PREFIX-FLAG #2nd_obj_prefix,
                      3_PL_SUBJ_AOR_INTRANS-OR-3_PL_SUBJ_AOR_TRANS-OR-3_PL_SUBJ_PRES_INTRANS-OR-3_PL_SUBJ_PRES_TRANS-OR-3_SG_SUBJ_PRES_INTRANS-OR-3_SG_SUBJ_PRES_TRANS-FLAG #3_pl_subj_aor_intrans-or-3_pl_subj_aor_trans-or-3_pl_subj_pres_intrans-or-3_pl_subj_pres_trans-or-3_sg_subj_pres_intrans-or-3_sg_subj_pres_trans,
                      3_PL_SUBJ_AOR_INTRANS-OR-3_PL_SUBJ_PAST_IMPERF_INTRANS-OR-3_PL_SUBJ_PRES_INTRANS-OR-3_SG_SUBJ_AOR_INTRANS-OR-3_SG_SUBJ_PAST_IMPERF_INTRANS-OR-3_SG_SUBJ_PRES_INTRANS-OR-TENSE_AND_3RD_SUBJ-FLAG #3_pl_subj_aor_intrans-or-3_pl_subj_past_imperf_intrans-or-3_pl_subj_pres_intrans-or-3_sg_subj_aor_intrans-or-3_sg_subj_past_imperf_intrans-or-3_sg_subj_pres_intrans-or-tense_and_3rd_subj,
                      OBJ_PREFIX-FLAG #obj_prefix,
                      PSF-FLAG #psf,
                      NOUN-CASE-SUFFIX-FLAG #noun-case-suffix,
                      INTRANS-VERB-FLAG #intrans-verb,
                      TENSE_AND_3RD_SUBJ-FLAG #tense_and_3rd_subj,
                      1ST_2ND_PERSON_SUBJ_PREFIXES-OR-3_PL_SUBJ_AOR_INTRANS-OR-3_PL_SUBJ_PAST_IMPERF_INTRANS-OR-3_PL_SUBJ_PRES_INTRANS-OR-3_SG_SUBJ_AOR_INTRANS-OR-3_SG_SUBJ_PAST_IMPERF_INTRANS-OR-3_SG_SUBJ_PRES_INTRANS-FLAG #1st_2nd_person_subj_prefixes-or-3_pl_subj_aor_intrans-or-3_pl_subj_past_imperf_intrans-or-3_pl_subj_pres_intrans-or-3_sg_subj_aor_intrans-or-3_sg_subj_past_imperf_intrans-or-3_sg_subj_pres_intrans ] ] ].

    To account for the adjectives that don't take agreement markers, I also to georgian.tdl added the class:
	infl-adjective-lex := adjective-lex & 
    [ INFLECTED [ ADJ-CASE-SUFFIX-FLAG +]].

and made a few items in lexicon.tdl that inherited from this type, such as:
	
ბრმა := infl-adjective-lex &
  [ STEM < "ბრმა" >,
	SYNSEM.LKEYS.KEYREL.PRED "_blind_adj_rel" ].

Demonstratives and definiteness:
    Marked personal pronouns for COG-ST activ-or-more, SPECI +:
	example with 1st sg, similar changes made to all pronouns:
1sg-pro-noun-lex := noun-lex &
  [ SYNSEM.LOCAL.CONT.HOOK.INDEX [ PNG [ PER 1st,
                                       NUM singular ],
								  COG-ST activ-or-more, SPECI + ],
    INFLECTED.GENERAL_ENDING_VOWEL-NOUN-FLAG na-or-- ].

indefinite determiners:
    Georgian does have indefinite determiners, I have modified their class type to include COG-ST type-id:

indeterminate-determiner-lex := determiner-lex &
  [ INFLECTED.DETERMINER-CASE-SUFFIX-FLAG - ] & [SYNSEM.LOCAL.CAT.VAL.SPEC.FIRST.LOCAL [ CONT.HOOK.INDEX [COG-ST type-id ] ] ].

  My demonstrative adjectives have also changed, to include this hierarchy:

demonstrative_a_rel := predsort.
proximal+dem_a_rel := demonstrative_a_rel. ; close to speaker
distal+dem_a_rel := demonstrative_a_rel.   ; away from speaker
remote+dem_a_rel := distal+dem_a_rel.      ; away from speaker and hearer
hearer+dem_a_rel := distal+dem_a_rel.      ; near hearer

  an example of one of my demonstrative determiners changed to one of these labels:

იმ := remote_others-determiner-lex &
  [ STEM < "იმ" >,
    SYNSEM.LKEYS.KEYREL.PRED "_remote+dem_a_rel" ].

also added to georgian.tdl:

determiner-lex-supertype := norm-hook-lex-item & basic-zero-arg &
  [ SYNSEM [ LOCAL [ CAT [ HEAD det,
			   VAL[ SPEC.FIRST.LOCAL.CONT.HOOK [ INDEX #ind,
				  			     LTOP #larg ],
                                SPR < >,
                                SUBJ < >,
                                COMPS < >]],
		     CONT.HCONS < ! qeq &
				 [ HARG #harg,
				   LARG #larg ] ! > ], 
	     LKEYS.KEYREL quant-relation &
		   [ ARG0 #ind,
		     RSTR #harg ] ] ].
 which means I had to change indeterminate-determiner-lex to include single-rel-lex-item as a supertype.
indeterminate-determiner-lex := determiner-lex & single-rel-lex-item

For the demonstratives, I added a type that inherited from determiner-lex-supertype:
demonstrative-determiner-lex := determiner-lex-supertype & determiner-lex &
    [ SYNSEM [LKEYS [ALTKEYREL arg1-ev-relation ] ] ] & [SYNSEM.LOCAL.CAT.VAL.SPEC.FIRST.LOCAL.CONT.HOOK.INDEX [COG-ST activ+fam ] ].

and made it the supertype of all my demonstrative types
proximal_nom-determiner-lex := demonstrative-determiner-lex & 
  [ SYNSEM.LOCAL.CAT.VAL.SPEC.FIRST.LOCAL [ CAT.HEAD.CASE abs+nom,
                                            CONT.HOOK.INDEX.PNG.PER 3rd ] ].

Optional arguments:
    As far as I can currently tell, the system is currently handling dropped arguments appropriately in terms of syntax.  But this is probably because you seem to be able to drop arguments whenever they're in focus.  I'm not completely sure of the COG-ST value, but it seems that in-foc seems to be the best for subjects, but I wouldn't be surprised to learn that objects are more of a situation of COG-ST type-id.  Unfortunately, none of my sources really talk about the pragmatics of argument drop much, except for the fact that it's exceedingly common.

	Because it looks like most of this is already done, I change basic-head-opt-comp-phrase to include OPT-CS in-foc.

Corpus:
    The test corpus I have found is from http://www.armazi.com/georgian/unicode/sample_text.htm and is a Georgian folk tale.  This is a convenient choice, because it already comes with IGT (though in a completely different format than is standard, and is a lot of work to adapt...but at least I know for sure what it all means). However, because it is a folk tale there are a few oddities such as:

    იყო და არა იყო რა...
    იყო და არა იყო რა
    3.SG.AOR.be and not 3.SG.AOR.be
    `Once upon a time...'
